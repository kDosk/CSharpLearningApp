<Application x:Class="CSharpLearningApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:CSharpLearningApp">
	<Application.Resources>
		<!--#region Colors -->
		<Color x:Key="PrimaryColor">#22355b</Color>
		<Color x:Key="SecondaryColor">#7fabff</Color>
		<Color x:Key="BackgroundColor">#fff</Color>

		<Color x:Key="PrimaryFontColor">#fff</Color>
		<Color x:Key="SecondaryFontColor">#f3cf3e</Color>
		<Color x:Key="ThirdFontColor">#000</Color>

		<SolidColorBrush x:Key="PrimaryColorBrush" Color="{StaticResource PrimaryColor}"></SolidColorBrush>
		<SolidColorBrush x:Key="SecondaryColorBrush" Color="{StaticResource SecondaryColor}"></SolidColorBrush>
		<SolidColorBrush x:Key="BackgroundColorBrush" Color="{StaticResource BackgroundColor}"></SolidColorBrush>

		<SolidColorBrush x:Key="PrimaryFontColorBrush" Color="{StaticResource PrimaryFontColor}"></SolidColorBrush>
		<SolidColorBrush x:Key="SecondaryFontColorBrush" Color="{StaticResource SecondaryFontColor}"></SolidColorBrush>
		<SolidColorBrush x:Key="ThirdFontColorBrush" Color="{StaticResource ThirdFontColor}"></SolidColorBrush>
		<!--#endregion-->

		<!--#region Default Button Style -->
		<Style x:Key="DefaultButton" TargetType="Button">
			<Setter Property="HorizontalAlignment" Value="Center"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="Height" Value="40"/>
			<Setter Property="FontSize" Value="16"/>
			<Setter Property="Background" Value="{StaticResource PrimaryColorBrush}"/>
			<Setter Property="Foreground" Value="{StaticResource PrimaryFontColorBrush}"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="0"/>
		</Style>
		<!--#endregion-->

		<!--#region Navigation Button Style -->
		<Style x:Key="NavigationButton" TargetType="Button" BasedOn="{StaticResource DefaultButton}">
			<Setter Property="Margin" Value="15 0"/>
			<Setter Property="Height" Value="40"/>
			<Setter Property="HorizontalAlignment" Value="Left"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="FontWeight" Value="Bold"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								VerticalAlignment="{TemplateBinding VerticalAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
								Height="{TemplateBinding Height}"
								Width="{TemplateBinding Width}">
							<Border.Background>
								<SolidColorBrush x:Name="borderBackground" Color="Transparent"/>
							</Border.Background>
							<ContentControl Margin="{TemplateBinding Padding}"
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											Content="{TemplateBinding Content}">
								<ContentControl.Foreground>
									<SolidColorBrush x:Name="ContentColor" Color="{StaticResource PrimaryFontColor}"/>
								</ContentControl.Foreground>
							</ContentControl>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup Name="CommonStates">
									<VisualState Name="Normal"/>
									<VisualState Name="MouseOver">
										<Storyboard>
											<ColorAnimation Storyboard.TargetName="ContentColor"
															Storyboard.TargetProperty="Color" To="{StaticResource SecondaryFontColor}"
															Duration="0:0:0.15"/>
										</Storyboard>
									</VisualState>
									<VisualState Name="Pressed">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="borderBackground"
															Storyboard.TargetProperty="Opacity" To="0.9"
															 Duration="0:0:0.1"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--#endregion-->

		<!--#region User Instruction Button Style -->
		<Style x:Key="UserInstructionButton" TargetType="Button" BasedOn="{StaticResource DefaultButton}">
			<Setter Property="Margin" Value="15 0"/>
			<Setter Property="Height" Value="40"/>
			<Setter Property="HorizontalAlignment" Value="Left"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="FontWeight" Value="Bold"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								VerticalAlignment="{TemplateBinding VerticalAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
								Height="{TemplateBinding Height}"
								Width="{TemplateBinding Width}">
							<Border.Background>
								<SolidColorBrush x:Name="borderBackground" Color="{StaticResource PrimaryColor}"/>
							</Border.Background>
							<ContentControl Margin="{TemplateBinding Padding}"
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											Content="{TemplateBinding Content}">
								<ContentControl.Foreground>
									<SolidColorBrush x:Name="ContentColor" Color="{StaticResource PrimaryFontColor}"/>
								</ContentControl.Foreground>
							</ContentControl>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup Name="CommonStates">
									<VisualState Name="Normal"/>
									<VisualState Name="MouseOver">
										<Storyboard>
											<ColorAnimation Storyboard.TargetName="ContentColor"
															Storyboard.TargetProperty="Color" To="{StaticResource SecondaryFontColor}"
															Duration="0:0:0.15"/>
										</Storyboard>
									</VisualState>
									<VisualState Name="Pressed">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="borderBackground"
															Storyboard.TargetProperty="Opacity" To="0.9"
															 Duration="0:0:0.1"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="borderBackground"
															Storyboard.TargetProperty="Opacity" To="0.9"
															 Duration="0:0:0.1"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--#endregion-->

		<!--#region Rounded Button -->
		<Style x:Key="RoundedButton" TargetType="Button" BasedOn="{StaticResource DefaultButton}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								VerticalAlignment="{TemplateBinding VerticalAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
								Height="{TemplateBinding Height}"
								Width="{TemplateBinding Width}"
                                CornerRadius="20">
							<Border.Background>
								<SolidColorBrush x:Name="borderBackground" Color="{StaticResource PrimaryColor}"/>
							</Border.Background>
							<ContentControl Margin="{TemplateBinding Padding}"
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											Content="{TemplateBinding Content}">
								<ContentControl.Foreground>
									<SolidColorBrush x:Name="ContentColor" Color="{StaticResource PrimaryFontColor}"/>
								</ContentControl.Foreground>
							</ContentControl>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup Name="CommonStates">
									<VisualState Name="Normal"/>
									<VisualState Name="MouseOver">
										<Storyboard>
											<ColorAnimation Storyboard.TargetName="ContentColor"
															Storyboard.TargetProperty="Color" To="{StaticResource SecondaryFontColor}"
															Duration="0:0:0.15"/>
										</Storyboard>
									</VisualState>
									<VisualState Name="Pressed">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="borderBackground"
															Storyboard.TargetProperty="Opacity" To="0.9"
															 Duration="0:0:0.1"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--#endregion-->

		<!--#region TextBlock H1 -->
		<Style x:Key="TextBlockH1" TargetType="TextBlock">
			<Setter Property="TextWrapping" Value="Wrap"/>
			<Setter Property="FontWeight" Value="Bold"/>
			<Setter Property="FontSize" Value="18"/>
			<Setter Property="Foreground" Value="{StaticResource PrimaryFontColorBrush}"/>
		</Style>
		<!--#endregion-->

		<!--#region TextBlock H1 Black Font -->
		<Style x:Key="TextBlockH1BlackFont" TargetType="TextBlock">
			<Setter Property="TextWrapping" Value="Wrap"/>
			<Setter Property="FontWeight" Value="Bold"/>
			<Setter Property="FontSize" Value="18"/>
			<Setter Property="Foreground" Value="{StaticResource ThirdFontColorBrush}"/>
		</Style>
		<!--#endregion-->

		<!--#region TextBlock Animation H1 -->
		<Style x:Key="TextBlockH1WithAnimation" TargetType="TextBlock" BasedOn="{StaticResource TextBlockH1}">
			<Style.Triggers>
				<EventTrigger RoutedEvent="UIElement.MouseEnter">
					<BeginStoryboard>
						<Storyboard>
							<ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource SecondaryFontColor}" Duration="0:0:0.15"/>
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
				<EventTrigger RoutedEvent="UIElement.MouseLeave">
					<BeginStoryboard>
						<Storyboard>
							<ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource PrimaryFontColor}" Duration="0:0:0.15"/>
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
			</Style.Triggers>
		</Style>
		<!--#endregion-->

		<!--#region TextBlock Black Font Animation H1 -->
		<Style x:Key="TextBlockH1BlackFontWithAnimation" TargetType="TextBlock" BasedOn="{StaticResource TextBlockH1BlackFont}">
			<Style.Triggers>
				<EventTrigger RoutedEvent="UIElement.MouseEnter">
					<BeginStoryboard>
						<Storyboard>
							<ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource SecondaryFontColor}" Duration="0:0:0.15"/>
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
				<EventTrigger RoutedEvent="UIElement.MouseLeave">
					<BeginStoryboard>
						<Storyboard>
							<ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource ThirdFontColor}" Duration="0:0:0.15"/>
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
			</Style.Triggers>
		</Style>
		<!--#endregion-->

		<!--#region TextBlock H2 -->
		<Style x:Key="TextBlockH2" TargetType="TextBlock">
			<Setter Property="TextWrapping" Value="Wrap"/>
			<Setter Property="FontWeight" Value="Bold"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="Foreground" Value="{StaticResource PrimaryFontColorBrush}"/>
		</Style>
		<!--#endregion-->

		<!--#region TextBlock H2 Black Font -->
		<Style x:Key="TextBlockH2BlackFont" TargetType="TextBlock">
			<Setter Property="TextWrapping" Value="Wrap"/>
			<Setter Property="FontWeight" Value="Bold"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="Foreground" Value="{StaticResource ThirdFontColorBrush}"/>
		</Style>
		<!--#endregion-->

		<!--#region TextBox -->
		<Style x:Key="TextBoxDefault" TargetType="TextBox">
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
			<Setter Property="TextWrapping" Value="Wrap"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="Height" Value="40"/>
			<Setter Property="FontSize" Value="16"/>
			<Setter Property="Foreground" Value="{StaticResource ThirdFontColorBrush}"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="TextBox">
						<Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Margin="{TemplateBinding Margin}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="15">
							<ScrollViewer Margin="5 0" x:Name="PART_ContentHost" SnapsToDevicePixels="True" VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"></ScrollViewer>
							<Border.BorderBrush>
								<SolidColorBrush x:Name="borderColor" Color="LightGray"></SolidColorBrush>
							</Border.BorderBrush>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup Name="CommonStates">
									<VisualState Name="Normal"/>
									<VisualState Name="MouseOver"/>
									<VisualState Name="Pressed"/>
								</VisualStateGroup>
								<VisualStateGroup Name="FocusStates">
									<VisualState Name="Focused">
										<Storyboard>
											<ColorAnimation Storyboard.TargetName="borderColor"
															Storyboard.TargetProperty="Color" To="{StaticResource PrimaryColor}"
															Duration="0:0:0.15"/>
										</Storyboard>
									</VisualState>
									<VisualState Name="Unfocused">
										<Storyboard>
											<ColorAnimation Storyboard.TargetName="borderColor"
															Storyboard.TargetProperty="Color" To="LightGray"
															Duration="0:0:0.15"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--#endregion-->

		<!--#region TextBox practice page -->
		<Style x:Key="TextBoxPracticePage" TargetType="TextBox">
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
			<Setter Property="TextWrapping" Value="Wrap"/>
			<Setter Property="VerticalAlignment" Value="Stretch"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="FontSize" Value="16"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Foreground" Value="{StaticResource ThirdFontColorBrush}"/>
		</Style>
		<!--#endregion-->

		<!--#region PasswordBox -->
		<Style x:Key="PasswordBoxDefault" TargetType="PasswordBox">
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="Height" Value="40"/>
			<Setter Property="FontSize" Value="16"/>
			<Setter Property="Foreground" Value="{StaticResource ThirdFontColorBrush}"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="PasswordBox">
						<Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Margin="{TemplateBinding Margin}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="15">
							<ScrollViewer Margin="5 0" x:Name="PART_ContentHost" SnapsToDevicePixels="True" ></ScrollViewer>
							<Border.BorderBrush>
								<SolidColorBrush x:Name="borderColor" Color="LightGray"></SolidColorBrush>
							</Border.BorderBrush>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup Name="CommonStates">
									<VisualState Name="Normal"/>
									<VisualState Name="MouseOver"/>
									<VisualState Name="Pressed"/>
								</VisualStateGroup>
								<VisualStateGroup Name="FocusStates">
									<VisualState Name="Focused">
										<Storyboard>
											<ColorAnimation Storyboard.TargetName="borderColor"
															Storyboard.TargetProperty="Color" To="{StaticResource PrimaryColor}"
															Duration="0:0:0.15"/>
										</Storyboard>
									</VisualState>
									<VisualState Name="Unfocused">
										<Storyboard>
											<ColorAnimation Storyboard.TargetName="borderColor"
															Storyboard.TargetProperty="Color" To="LightGray"
															Duration="0:0:0.15"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--#endregion-->

		<!--#region ToggleButton Navigation Borderless -->
		<Style x:Key="ToggleButtonNavigationBorderless" TargetType="ToggleButton">
			<Setter Property="Margin" Value="15"/>
			<Setter Property="Height" Value="40"/>
			<Setter Property="HorizontalAlignment" Value="Left"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="FontWeight" Value="Bold"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ToggleButton">
						<Border BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								VerticalAlignment="{TemplateBinding VerticalAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
								Height="{TemplateBinding Height}"
								Width="{TemplateBinding Width}">
							<Border.Background>
								<SolidColorBrush x:Name="borderBackground" Color="Transparent"/>
							</Border.Background>
							<ContentControl Margin="{TemplateBinding Padding}"
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											Content="{TemplateBinding Content}">
							</ContentControl>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup Name="CommonStates">
									<VisualState Name="Normal"/>
									<VisualState Name="MouseOver"/>
									<VisualState Name="Pressed">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="borderBackground"
															Storyboard.TargetProperty="Opacity" To="0.9"
															 Duration="0:0:0.1"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup Name="CheckStates">
									<VisualState Name="Checked"/>
									<VisualState Name="Unchecked"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--#endregion-->

		<!--#region ToggleButton With Single Border -->
		<Style x:Key="ToggleButtonSingleBorder" TargetType="RadioButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
			<Setter Property="Margin" Value="15"/>
			<Setter Property="Height" Value="40"/>
			<Setter Property="HorizontalAlignment" Value="Center"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="0 0 0 3"/>
			<Setter Property="FontSize" Value="18"/>
			<Setter Property="FontWeight" Value="Bold"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ToggleButton">
						<Border BorderThickness="{TemplateBinding BorderThickness}"
								VerticalAlignment="{TemplateBinding VerticalAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
								Height="{TemplateBinding Height}"
								Width="{TemplateBinding Width}">
							<Border.Background>
								<SolidColorBrush x:Name="borderBackground" Color="Transparent"/>
							</Border.Background>
							<Border.BorderBrush>
								<SolidColorBrush x:Name="borderBrush" Color="Transparent"/>
							</Border.BorderBrush>
							<ContentControl Margin="{TemplateBinding Padding}"
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											Content="{TemplateBinding Content}">
							</ContentControl>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup Name="CommonStates">
									<VisualState Name="Normal"/>
									<VisualState Name="MouseOver"/>
									<VisualState Name="Pressed">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="borderBackground"
															Storyboard.TargetProperty="Opacity" To="0.9"
															 Duration="0:0:0.1"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup Name="CheckStates">
									<VisualState Name="Checked">
										<Storyboard>
											<ColorAnimation Storyboard.TargetName="borderBrush"
                                                            Storyboard.TargetProperty="Color"
                                                            From="Transparent" To="{StaticResource PrimaryColor}" Duration="0:0:0.5"/>
										</Storyboard>
									</VisualState>
									<VisualState Name="Unchecked">
										<Storyboard>
											<ColorAnimation Storyboard.TargetName="borderBrush"
                                                            Storyboard.TargetProperty="Color"
                                                            From="{StaticResource PrimaryColor}" To="Transparent" Duration="0:0:0.5"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--#endregion-->

		<!--#region ListView Default -->
		<Style x:Key="ListViewDefault" TargetType="ListView">
			<Style.Resources>
				<Style TargetType="ListViewItem">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="ListViewItem">
								<ContentPresenter></ContentPresenter>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Style.Resources>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
		</Style>
		<!--#endregion-->

		<!--#region RadioButton Default -->
		<Style x:Key="RadioButtonAnswers" TargetType="RadioButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
			<Setter Property="Margin" Value="0 5"/>
			<Setter Property="Padding" Value="0 10"/>
			<Setter Property="Height" Value="auto"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="3"/>
			<Setter Property="FontSize" Value="16"/>
			<Setter Property="FontWeight" Value="Bold"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ToggleButton">
						<Border BorderThickness="{TemplateBinding BorderThickness}"
								VerticalAlignment="{TemplateBinding VerticalAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
								Height="{TemplateBinding Height}"
								Width="{TemplateBinding Width}"
								CornerRadius="20">
							<Border.Background>
								<SolidColorBrush x:Name="borderBackground" Color="Transparent"/>
							</Border.Background>
							<Border.BorderBrush>
								<SolidColorBrush x:Name="borderBrush" Color="{StaticResource SecondaryFontColor}"/>
							</Border.BorderBrush>
							<ContentControl Margin="{TemplateBinding Padding}"
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											Content="{TemplateBinding Content}">
							</ContentControl>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup Name="CommonStates">
									<VisualState Name="Normal"/>
									<VisualState Name="MouseOver"/>
									<VisualState Name="Pressed">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="borderBackground"
															Storyboard.TargetProperty="Opacity" To="0.9"
															 Duration="0:0:0.1"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup Name="CheckStates">
									<VisualState Name="Checked">
										<Storyboard>
											<ColorAnimation Storyboard.TargetName="borderBrush"
                                                            Storyboard.TargetProperty="Color"
                                                            From="Transparent" To="{StaticResource SecondaryFontColor}" Duration="0:0:0.5"/>
										</Storyboard>
									</VisualState>
									<VisualState Name="Unchecked">
										<Storyboard>
											<ColorAnimation Storyboard.TargetName="borderBrush"
                                                            Storyboard.TargetProperty="Color"
                                                            From="{StaticResource SecondaryFontColor}" To="Transparent" Duration="0:0:0.5"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--#endregion-->

		<!--#region TestList Progress Bar -->
		<Style x:Key="TestListProgressBar" TargetType="ProgressBar">
			<Setter Property="Background" Value="White"/>
			<Setter Property="BorderThickness" Value="3"/>
			<Setter Property="Foreground" Value="{StaticResource SecondaryFontColorBrush}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ProgressBar">
						<Grid MinHeight="{TemplateBinding MaxHeight}"
							  MinWidth="{TemplateBinding MaxWidth}"
							  Background="Transparent">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Determinate"/>
									<VisualState x:Name="Indeterminate">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Duration="0:0:0"
																		   Storyboard.TargetName="PART_Indicator"
																		   Storyboard.TargetProperty="background">
												<DiscreteObjectKeyFrame KeyTime="0:0:0">
													<DiscreteObjectKeyFrame.Value>
														<SolidColorBrush>Transparent</SolidColorBrush>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="PART_Track"
									CornerRadius="10"
									BorderThickness="{TemplateBinding BorderThickness}">
								<Border.BorderBrush>
									<SolidColorBrush Color="{StaticResource SecondaryColor}"/>
								</Border.BorderBrush>
							</Border>
							<Border x:Name="PART_Indicator"
									CornerRadius="10"
									BorderThickness="{TemplateBinding BorderThickness}"
									HorizontalAlignment="Left"
									Background="{TemplateBinding Foreground}"
									Padding="0">
							</Border>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--#endregion-->

		<!--#region CheckBox Default -->
		<Style x:Key="CheckBoxDefault" TargetType="CheckBox">
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Foreground" Value="{StaticResource PrimaryFontColorBrush}"/>
			<Setter Property="Margin" Value="10"/>
		</Style>
		<!--#endregion-->

	</Application.Resources>
</Application>
